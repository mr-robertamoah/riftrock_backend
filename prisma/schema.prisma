// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int   @id @default(autoincrement())
  email    String   @unique
  password String
  firstName String? 
  lastName  String?
  otherNames  String?
  role Role @default(USER)
  addedServices Service[]
  addedProducts Product[]
  markedContacts Contact[]
  addedDetails Detail[]
  addedFiles File[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Service {
  id       Int   @id @default(autoincrement())
  title String
  description String? 
  details  String?
  icon  String?

  userId    Int
  user User @relation(fields: [userId], references: [id])

  files File[] @relation(map: "File_Service_Relation")

  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt @default(now())
}

model Product {
  id       Int   @id @default(autoincrement())
  title String
  description String? 
  details  String?

  userId    Int
  user User @relation(fields: [userId], references: [id])

  files File[] @relation(map: "File_Product_Relation")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contact {
  id       Int   @id @default(autoincrement())
  name String?
  email String 
  message  String
  seen  Boolean @default(false)

  userId    Int?
  user User? @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Detail {
  id       Int   @id @default(autoincrement())
  key String
  value Json
  info String?

  userId    Int
  user User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Email {
  id       Int   @id @default(autoincrement())
  sender String
  recepient String
  subject String
  body String

  createdAt DateTime @default(now())
}

model File {
  id       Int   @id @default(autoincrement())
  url String
  key String
  description String?

  morphId Int
  morphType String

  userId    Int
  user User @relation(fields: [userId], references: [id])

  service Service? @relation(fields: [morphId], references: [id], map: "File_Service_Relation")
  product Product? @relation(fields: [morphId], references: [id], map: "File_Product_Relation")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([morphId, morphType])
}

enum Role {
  SUPER_ADMIN
  ADMIN
  USER
}